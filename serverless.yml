service: checkfirst
frameworkVersion: '2'

plugins:
  - serverless-plugin-custom-binary

custom:
  apiGateway:
    binaryMediaTypes:
      - '*/*'

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${env:LAMBDA_NODE_ENV}
  region: ap-southeast-1
  memorySize: 256
  apiGateway:
    shouldStartNameWithService: true
  environment:
    NODE_ENV: ${env:LAMBDA_NODE_ENV}
  vpc:
    subnetIds:
      - ${env:VPC_SUBNET_A} 
      - ${env:VPC_SUBNET_B}
      - ${env:VPC_SUBNET_C}
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'ses:SendRawEmail'
      Resource:
        '*'

functions:
  api:
    handler: build/server/serverless/api.handler
    timeout: 30
    vpc:
      securityGroupIds:
        - ${env:VPC_SECURITY_GROUP_API}
    environment:
      DATABASE_URL: ${env:DATABASE_URL}
      SESSION_SECRET: ${env:SESSION_SECRET}
      OTP_SECRET: ${env:OTP_SECRET}
      OTP_EXPIRY: ${env:OTP_EXPIRY}
      SENTRY_AUTH_TOKEN: ${env:SENTRY_AUTH_TOKEN}
      SENTRY_DSN: ${env:SENTRY_DSN}
      SENTRY_ORG: ${env:SENTRY_ORG}
      SENTRY_PROJECT: ${env:SENTRY_PROJECT}
      SENTRY_URL: ${env:SENTRY_URL}
    events:
      - http:
          path: api/v1/{proxy+}
          method: any
  static:
    handler: build/server/serverless/static.handler
    timeout: 30
    vpc:
      securityGroupIds:
        - ${env:VPC_SECURITY_GROUP_STATIC}
    events:
      - http:
          path: ""
          method: get
      - http:
          path: bundle.js
          method: get
      - http:
          path: bundle.js.map
          method: get
      - http:
          path: bundle.js.LICENSE.txt
          method: get
      - http:
          path: logo.svg
          method: get
      - http:
          path: robots.txt
          method: get
      - http:
          path: debug
          method: get
      - http:
          path: login
          method: get
      - http:
          path: dashboard
          method: get
      - http:
          path: builder/{proxy+}
          method: get
      - http:
          path: c/{proxy+}
          method: get
      - http:
          path: assets/{proxy+}
          method: get
          contentHandling: CONVERT_TO_BINARY
